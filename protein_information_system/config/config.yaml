# ==============================
# üåç Global System Configuration
# ==============================

# Maximum number of worker threads for parallel processing.
max_workers: 10

# Path to binary files for alignment algorithms.
binaries_path: '../binaries'

# Monitoring interval in seconds (for processes that require periodic checks).
monitor_interval: 10 # ‚ö†Ô∏è IMPORTANT: Low values as 1 can cause execution problems.

# Path to save logs, set False to disable the option
log_path: '~/data/logs/'

# ======================================
# üóÑÔ∏è Database Configuration (PostgreSQL)
# ======================================

# Credentials and configuration for connecting to the PostgreSQL database.
DB_USERNAME: usuario         # Database username.
DB_PASSWORD: clave           # Database password.
DB_HOST: localhost           # Host where the database server is running.
DB_PORT: 5432                # Port used for the database connection.
DB_NAME: BioData             # Name of the database to use.


# =========================================
# üì® Message Queue Configuration (RabbitMQ)
# =========================================

# Configuration for the RabbitMQ message broker.
rabbitmq_host: localhost     # RabbitMQ server hostname.
rabbitmq_port: 5672         # RabbitMQ server port.
rabbitmq_port_http: 15672         # RabbitMQ server port.
rabbitmq_user: guest         # RabbitMQ username for authentication.
rabbitmq_password: guest     # RabbitMQ password for authentication.


# ==========================
# üèÉ Execution Configuration
# ==========================

# Maximum number of items to process (for debugging).
limit_execution: 100 # False for complete run.

# Reset queues with each execution.
delete_queues: True


# ===================================
# üìú Information System Configuration
# ===================================

## Load Accessions.
tag: 'METAMORPHISM' # Identifier tag for accession loading.

# üìó Load from CSV.
# Path to the CSV file containing accessions.
load_accesion_csv: ../data/sample.csv

# Column name in the CSV file.
load_accesion_column: uniprot_id

# üî¨ Fetch from the UniProt API.
# Query string for UniProt search.
#search_criteria: '(go_exp:* OR go_ida:* OR go_ipi:* OR go_imp:* OR go_igi:* OR go_iep:* OR go_tas:* OR go_ic:*)'
# Query string for Protein Data Bank search.
search_criteria: '(structure_3d:true)'


# Number of results to fetch from UniProt (pagination).
limit: 200

# üíª PDB Extraction
# Sets the resolution in √Öngstr√∂ms, retaining only structures below this value.
resolution_threshold: 5

# Local path where the files will be stored.
data_directory: "~/data"

# File extension
file_format: "mmCif"


# ===========================
# üöÄ Operations Configuration
# ===========================

# Path to the constants configuration file.
constants: "config/constants.yaml"

# üß¨ Embedding
embedding:
  device: "cuda"
  # List of embedding types to compute (Comment with # at the beginning to de/activate).
  types:
#    - 1 # ESM2 (facebook/esm2_t33_650M_UR50D) ‚Äì 650M parameter encoder-only transformer trained with masked language modeling on UniRef50
#    - 2 # ProstT5 (Rostlab/ProstT5) ‚Äì ‚àº1.2B parameter encoder-decoder model trained for multi-modal protein representation including 3Di structure
#    - 3 # ProtT5 (Rostlab/prot_t5_xl_uniref50) ‚Äì ‚àº1.2B parameter T5-based model pretrained on UniRef50 using span masking
#    - 4 # Ankh3-Large (ElnaggarLab/ankh3-large) ‚Äì 620M parameter encoder-only T5-style model with [NLU] prefix for efficient semantic/structural embeddings
    - 5 # ESM3c (esmc_600m) ‚Äì 600M parameter masked language model (Transformer with rotary embeddings and SwiGLU) trained on UniRef, MGnify, and JGI datasets

  # Queue according to this batch size.
  batch_size: 1

# üß† GO Metrics
# Specifies the list of UniProt evidence codes used to filter annotations. set empty list for all evidences. []
allowed_evidences: []




